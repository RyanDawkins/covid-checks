{"version":3,"sources":["calculator/corona-check.js","calculator/IncomeForm.js","disclaimer/Disclaimer.js","i18n.js","language-switcher/LanguageSwitcher.js","App.js","serviceWorker.js","index.js"],"names":["SINGLE","baseAmount","maxIncomeForFullPayout","minIncomeForPayout","minimumPayout","MARRIED","CoronaCheck","income","isMarried","numberOfChildren","this","_income","_isMarried","_numberOfChildren","_getIncomeBasedPayout","_calculateChildrenPayout","maritalValues","_getMaritalValues","payout","_getDeductionOffset","getNumberOfChildren","Math","round","IncomeForm","props","check","state","calculatePayout","handleMaritalStatusChange","bind","handleIncomeChange","handleNumberOfChildrenChange","event","Number","target","value","changeIncome","setState","changeMaritalStatus","changeNumberOfChildren","t","className","htmlFor","id","type","onChange","placeholder","checked","React","Component","withTranslation","Disclaimer","width","height","viewBox","fill","xmlns","fillRule","d","clipRule","i18nKey","rel","href","i18n","use","initReactI18next","init","fallbackLng","debug","interpolation","escapeValue","resources","en","translation","es","LanguageSwitcher","language","handleSwitch","newLanguage","changeLanguage","onClick","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.7f02b7ab.chunk.js","sourcesContent":["const SINGLE = {\n    baseAmount: 1200,\n    maxIncomeForFullPayout: 75000,\n    minIncomeForPayout: 2500,\n    minimumPayout: 600\n}\n\nconst MARRIED = {\n    baseAmount: 2400,\n    maxIncomeForFullPayout: 150000,\n    minIncomeForPayout: 2500,\n    minimumPayout: 1200\n}\n\nconst DEDUCTION_PER_INCREMENT = 5\nconst INCREMENT = 100\nconst PAYOUT_PER_CHILD = 500\n\nexport default class CoronaCheck {\n\n    /**\n     * @param {number} income \n     * @param {boolean} isMarried\n     * @param {numberOfChildren} numberOfChildren\n     */\n    constructor(income, isMarried, numberOfChildren) {\n        this._income = income\n        this._isMarried = isMarried\n        this._numberOfChildren = numberOfChildren\n    }\n\n    /**\n     * @returns {number} payout based on income and marital status\n     */\n    calculatePayout() {\n        return this._getIncomeBasedPayout() + this._calculateChildrenPayout()\n    }\n\n    _getIncomeBasedPayout() {\n        const maritalValues = this._getMaritalValues()\n\n        let payout = maritalValues.minimumPayout\n        if (this._income > maritalValues.minIncomeForPayout) {\n            payout = maritalValues.baseAmount - this._getDeductionOffset(maritalValues.maxIncomeForFullPayout)\n        }\n\n        return payout < 0 ? 0 : payout\n    }\n\n    _getMaritalValues() {\n        return this._isMarried ? MARRIED : SINGLE\n    }\n\n    _calculateChildrenPayout() {\n        return PAYOUT_PER_CHILD * this.getNumberOfChildren()\n    }\n\n    _getDeductionOffset(maxIncomeForFullPayout) {\n        if (this._income <= maxIncomeForFullPayout) return 0\n        return Math.round(((this._income - maxIncomeForFullPayout) / INCREMENT) * DEDUCTION_PER_INCREMENT)\n    }\n\n    /**\n     * @param {number} income\n     * @returns {CoronaCheck} new instance with a different income\n     */\n    changeIncome(income) {\n        return new CoronaCheck(income, this._isMarried, this._numberOfChildren)\n    }\n\n    /**\n     * @param {boolean} isMarried true if married, false if single\n     * @returns {CoronaCheck} new instance with a different marital status\n     */\n    changeMaritalStatus(isMarried) {\n        return new CoronaCheck(this._income, isMarried, this._numberOfChildren)\n    }\n\n    changeNumberOfChildren(numberOfChildren) {\n        return new CoronaCheck(this._income, this._isMarried, numberOfChildren)\n    }\n\n    /**\n     * @returns {boolean} true if married, false if single\n     */\n    isMarried() {\n        return this._isMarried\n    }\n\n    /**\n     * @returns {number} income in USD\n     */\n    getIncome() {\n        return this._income\n    }\n\n    /**\n     * @returns {number} number of children\n     */\n    getNumberOfChildren() {\n        return this._numberOfChildren || 0\n    }\n\n}","import React from 'react'\nimport { withTranslation } from 'react-i18next'\n\nimport './IncomeForm.css';\nimport CoronaCheck from './corona-check';\n\nclass IncomeForm extends React.Component {\n    constructor(props) {\n        super(props)\n        this.check = new CoronaCheck(0, false, 0)\n        this.state = { \n            income: 0, \n            isMarried: this.check.isMarried(),\n            numberOfChildren: 0, \n            payout: this.check.calculatePayout()\n        }\n\n        this.handleMaritalStatusChange = this.handleMaritalStatusChange.bind(this)\n        this.handleIncomeChange = this.handleIncomeChange.bind(this)\n        this.handleNumberOfChildrenChange = this.handleNumberOfChildrenChange.bind(this)\n    }\n\n    handleIncomeChange(event) {\n        const income = Number(event.target.value)\n        this.check = this.check.changeIncome(income)\n        this.setState({\n            ...this.state,\n            income: event.target.value,\n            payout: this.check.calculatePayout()\n        })\n    }\n\n    handleMaritalStatusChange(event) {\n        const isMarried = event.target.value === 'true'\n        this.check = this.check.changeMaritalStatus(isMarried)\n        this.setState({\n            ...this.state,\n            isMarried: isMarried,\n            payout: this.check.calculatePayout()\n        })\n    }\n\n    handleNumberOfChildrenChange(event) {\n        const numberOfChildren = Number(event.target.value)\n        this.check = this.check.changeNumberOfChildren(numberOfChildren)\n        this.setState({\n            ...this.state,\n            numberOfChildren: event.target.value,\n            payout: this.check.calculatePayout()\n        })\n    }\n\n    render() {\n        const { t } = this.props\n        return (\n            <div className=\"IncomeForm\">\n                <form>\n                    <fieldset>\n                        <label htmlFor=\"income\">{t('income')}</label><br />\n                        <input id=\"income\" type=\"number\"\n                            value={this.state.income}\n                            onChange={this.handleIncomeChange}\n                            placeholder={t('income')}/>\n                    </fieldset>\n                    <fieldset>\n                        <label htmlFor=\"maritalStatus\">{t('maritalStatus')}</label><br />\n                        <input id=\"maritalStatus\" type=\"radio\" \n                            value={true}\n                            checked={this.state.isMarried}\n                            onChange={this.handleMaritalStatusChange} />\n                        {t('yes')}\n                        <input id=\"maritalStatus\" type=\"radio\" \n                            value={false}\n                            checked={!this.state.isMarried}\n                            onChange={this.handleMaritalStatusChange} />\n                        {t('no')}\n                    </fieldset>\n                    <fieldset>\n                        <label htmlFor=\"numberOfChildren\">{t('howManyChildren')}</label><br />\n                        <input id=\"numberOfChildren\" type=\"number\" \n                            value={this.state.numberOfChildren} \n                            onChange={this.handleNumberOfChildrenChange} \n                            placeholder={t('numberOfChildren')} />\n                    </fieldset>\n                </form>\n                <p>{t('expectedPayout')}: ${this.state.payout}</p>\n            </div>\n          );\n    }\n}\n\nexport default withTranslation()(IncomeForm);\n","import React from 'react'\nimport { withTranslation, Trans } from 'react-i18next'\nimport './Disclaimer.css'\n\nclass Disclaimer extends React.Component {\n    render() {\n        const { t } = this.props\n        return (\n            <div className=\"alert alert-warning\">\n                <p>\n                    <svg className=\"bi bi-exclamation-circle\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path fillRule=\"evenodd\" d=\"M8 15A7 7 0 108 1a7 7 0 000 14zm0 1A8 8 0 108 0a8 8 0 000 16z\" clipRule=\"evenodd\"/>\n                        <path d=\"M7.002 11a1 1 0 112 0 1 1 0 01-2 0zM7.1 4.995a.905.905 0 111.8 0l-.35 3.507a.552.552 0 01-1.1 0L7.1 4.995z\"/>\n                    </svg>\n\n                    <Trans i18nKey=\"disclaimer\">\n                        This calculation does no guarantee a payout. This is exclusively a projection based on the <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.npr.org/2020/03/19/818253789/congress-awaits-gop-relief-plan-as-first-lawmakers-test-positive-for-coronavirus\">NPR article of the bill propsed on 3/19/2020.</a>\n                    </Trans>\n                </p>\n            </div>\n        )\n    }\n}\n\nexport default withTranslation()(Disclaimer)","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\n\ni18n\n  .use(initReactI18next)\n  .init({\n    fallbackLng: 'en',\n    debug: true,\n    interpolation: {\n      escapeValue: false\n    },\n    resources: {\n        en: {\n          translation: {\n            'income': 'Income',\n            'maritalStatus': 'Married?',\n            'yes': 'Yes',\n            'no': 'No',\n            'expectedPayout': 'Expected payout',\n            'languageMessage': '¿hable español?',\n            'disclaimer': 'This calculation does no guarantee a payout. This is exclusively a projection based on the <1>NPR article of the bill propsed on 3/19/2020.</1>',\n            'howManyChildren': 'How many children do you have?',\n            'numberOfChildren': 'Number of children'\n          }\n        },\n        es: {\n          translation: {\n              'income': 'Sueldo',\n              'maritalStatus': '¿Estas casado?',\n              'yes': 'Sí',\n              'no': 'No',\n              'expectedPayout': 'Pago esperado',\n              'languageMessage': 'Speak English?',\n              'disclaimer': 'Este cálculo no garantiza un pago. Esta es exclusivamente una proyección basada en <1>el artículo de NPR del proyecto de ley aprobado el 19/03/2020</1>',\n              'howManyChildren': '¿Cuántos hijos tiene?',\n              'numberOfChildren': 'Numero de niños'\n          }\n        }\n      },\n  });\n\n\nexport default i18n;","import React from 'react'\nimport i18n from '../i18n'\nimport { withTranslation } from 'react-i18next'\n\nclass LanguageSwitcher extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = { language: 'en' }\n\n        this.handleSwitch = this.handleSwitch.bind(this)\n    }\n\n    handleSwitch(event) {\n        const newLanguage = this.state.language === 'en' ? 'es' : 'en'\n        this.setState({\n            ...this.state,\n            language: newLanguage\n        })\n        i18n.changeLanguage(newLanguage)\n    }\n\n    render() {\n        const { t } = this.props\n        return (\n            <div className=\"container-fluid\">\n                <button type=\"button\" className=\"btn btn-primary\" onClick={this.handleSwitch}>{ t('languageMessage') }</button>\n            </div>\n        )\n    }\n}\n\nexport default withTranslation()(LanguageSwitcher)","import React from 'react';\nimport './App.css';\nimport IncomeForm from './calculator/IncomeForm'\nimport Disclaimer from './disclaimer/Disclaimer';\nimport LanguageSwitcher from './language-switcher/LanguageSwitcher';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Disclaimer />\n      <header className=\"App-header\">\n        <LanguageSwitcher />\n        <IncomeForm />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport './i18n';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}